/* map.css - keeps the map inside layout and ensures overlays are above it */

/* wrapper (not used by component directly but kept for compatibility) */
.map-wrapper {
  position: relative;
  width: 100%;
  height: 420px;
  display: block;
  overflow: hidden;
}

/* actual map element fills its parent and participates in layout */
.map-container,
.leaflet-container {
  position: relative !important; /* keep it in normal flow */
  z-index: 0 !important;         /* lowest stacking so UI can sit above */
  width: 100% !important;
  height: 100% !important;
  border-radius: inherit;        /* respect parent rounding */
  overflow: hidden;
}

/* ensure the leaflet container stays inside rounded corners and doesn't float */
.leaflet-container {
  width: 100% !important;
  height: 100% !important;
  z-index: 0 !important;
  border-radius: inherit !important;
}

/* map controls and UI above the map */
.map-controls {
  position: absolute;
  top: 12px;
  right: 12px;
  z-index: 30;
  pointer-events: auto;
}

/* higher-level UI should sit above map */
.app-topbar,
.sidebar,
.options-panel,
.dialog-overlay,
.dialog-content,
.modal {
  position: relative;
  z-index: 100000 !important;
}

/* Leaflet controls should sit above the map tiles but below modals */
.leaflet-control,
.leaflet-top,
.leaflet-bottom {
  z-index: 400 !important;
}

/* helper selectors for the component class names used in JSX */
.relative.w-full.h-\[70vh\] .map-container,
.map-container.w-full.h-full {
  width: 100%;
  height: 100%;
}

@media (max-width: 768px) {
  .relative.w-full.h-\[70vh\] {
    height: 50vh;
  }
}

/* map control positioned inside the map area (absolute relative to the map wrapper) */
.map-control-fixed {
  position: absolute; /* inside the .relative wrapper */
  top: 12px; /* place near the leafet zoom controls */
  right: 12px;
  z-index: 1000; /* above leaflet controls but below global modals */
}

.map-control-fixed .btn,
.map-control-fixed button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}